
Project public headers live here.

Guidelines:
1. Keep hardware-neutral logic (e.g. percent/time calculations) in a pure header + matching `.cpp` (like `logic_core.h`) so it can be hostâ€‘tested.
2. Avoid including heavy graphics or Arduino headers inside other headers; include them only in `.cpp` files when possible to reduce compile times.
3. Group related constants into thematic headers (e.g. `ui_design.h`) instead of scattering `#define` values across modules.
4. Prefer `constexpr` or `enum class` over raw `#define` for typed constants when not needed by preprocessor conditionals.
5. If a header introduces a dependency that is optional (e.g., an experimental feature), hide it behind a feature macro guard.

Suggested layout patterns:
- ui_design.h   : Colors, dimensions, feature toggles
- logic_core.h  : Pure functions used by both tests and runtime
- version.h     : (Optional) Semantic version or build metadata

Include hygiene:
```
#pragma once
#include <stdint.h>
// local headers after STL/system
#include "ui_design.h"
```

When adding new modules, keep the interface minimal; export only what the rest of the system truly needs.
